static Int32[] MergeSort(Int32[] array)
{
	if (array.Length == 1)
	{
		return array;
	}
	Int32 middle = array.Length / 2;
	return Merge(MergeSort(array.Take(middle).ToArray()), MergeSort(array.Skip(middle).ToArray()));
}

static Int32[] Merge(Int32[] arr1, Int32[] arr2)
{
	Int32 ptr1 = 0, ptr2 = 0;
	Int32[] merged = new Int32[arr1.Length + arr2.Length];

	for (Int32 i = 0; i < merged.Length; ++i)
	{
		if (ptr1 < arr1.Length && ptr2 < arr2.Length)
		{
			merged[i] = arr1[ptr1] > arr2[ptr2] ? arr2[ptr2++] : arr1[ptr1++];
		}
		else
		{
			merged[i] = ptr2 < arr2.Length ? arr2[ptr2++] : arr1[ptr1++];
		}
	}	
	return merged;
}